[
    {
        "Tag": "Array",
        "Question": "What is an array?",
        "Answer": "An array is a data structure that stores a collection of elements."
    },
    {
        "Tag": "Array",
        "Question": "What are the advantages of using arrays?",
        "Answer": "Arrays provide constant-time access to elements and are suitable for storing elements of the same data type in contiguous memory locations."
    },
    {
        "Tag": "Array",
        "Question": "What are the disadvantages of arrays?",
        "Answer": "Arrays have a fixed size, which means they cannot dynamically resize. Insertions and deletions at arbitrary positions can be inefficient."
    },
    {
        "Tag": "Array",
        "Question": "How do you declare an array in Python?",
        "Answer": "You can declare an array in Python using the array module or using list literals."
    },
    {
        "Tag": "Array",
        "Question": "What is the difference between an array and a list in Python?",
        "Answer": "An array in Python is a data structure from the array module that stores elements of the same data type in contiguous memory locations. A list, on the other hand, is a built-in data structure that can store elements of different data types and can dynamically resize."
    },
    {
        "Tag": "Array",
        "Question": "How do you access elements in an array?",
        "Answer": "You can access elements in an array by using their index. For example, arr[0] would access the first element of the array."
    },
    {
        "Tag": "Array",
        "Question": "What is the time complexity of accessing elements in an array?",
        "Answer": "Accessing elements in an array by index has a time complexity of O(1), as it directly computes the memory address of the element."
    },
    {
        "Tag": "Array",
        "Question": "How do you insert an element into an array?",
        "Answer": "You can insert an element into an array by shifting existing elements to make space for the new element and then placing the new element at the desired position."
    },
    {
        "Tag": "Array",
        "Question": "What is the time complexity of inserting an element into an array?",
        "Answer": "The time complexity of inserting an element into an array depends on the position of insertion. In the worst case, if the element is inserted at the beginning, it has a time complexity of O(n) as all elements need to be shifted. If the element is inserted at the end, it has a time complexity of O(1)."
    },
    {
        "Tag": "Array",
        "Question": "How do you delete an element from an array?",
        "Answer": "You can delete an element from an array by shifting subsequent elements to fill the gap created by the deletion."
    },
    {
        "Tag": "Array",
        "Question": "What is the time complexity of deleting an element from an array?",
        "Answer": "Similar to insertion, the time complexity of deleting an element from an array depends on the position of deletion. In the worst case, if the element is deleted from the beginning, it has a time complexity of O(n) as all elements need to be shifted. If the element is deleted from the end, it has a time complexity of O(1)."
    },
    {
        "Tag": "Array",
        "Question": "What is a dynamic array?",
        "Answer": "A dynamic array is a data structure that dynamically resizes itself to accommodate additional elements when needed. It combines the features of an array and a linked list, providing constant-time access to elements and dynamic resizing capabilities."
    },
    {
        "Tag": "Array",
        "Question": "What is the time complexity of appending an element to a dynamic array?",
        "Answer": "Appending an element to a dynamic array has an amortized time complexity of O(1). This is because the array may need to resize occasionally, but over a series of append operations, the resizing overhead is distributed, resulting in constant-time complexity on average."
    },
    {
        "Tag": "Array",
        "Question": "What is a two-dimensional array?",
        "Answer": "A two-dimensional array, also known as a matrix, is an array of arrays where each element is itself an array. It is commonly used to represent tabular data or grids."
    },
    {
        "Tag": "Array",
        "Question": "How do you declare a two-dimensional array?",
        "Answer": "In languages like C or C++, you can declare a two-dimensional array using syntax like int arr[rows][columns]. In Python, you can use nested lists or arrays to represent a two-dimensional array."
    },
    {
        "Tag": "Array",
        "Question": "What is a jagged array?",
        "Answer": "A jagged array is an array of arrays where each element can be an array of different sizes. Unlike a two-dimensional array, the sub-arrays in a jagged array can have varying lengths."
    },
    {
        "Tag": "Array",
        "Question": "What are sparse arrays?",
        "Answer": "Sparse arrays are arrays where most of the elements have a default value (usually zero or null) and only a few elements have non-default values. They are used to efficiently represent and manipulate large arrays with a significant number of default values."
    },
    {
        "Tag": "Array",
        "Question": "What is an array data structure?",
        "Answer": "An array data structure is a collection of elements stored in contiguous memory locations, each identified by at least one array index or key."
    },
    {
        "Tag": "Array",
        "Question": "What are some common operations on arrays?",
        "Answer": "Common operations on arrays include accessing elements by index, inserting elements, deleting elements, searching for elements, and iterating over elements."
    },
    {
        "Tag": "Array",
        "Question": "What is a one-dimensional array?",
        "Answer": "A one-dimensional array is the simplest form of an array, consisting of a single line of elements stored in contiguous memory locations."
    },
    {
        "Tag": "Array",
        "Question": "What is a multi-dimensional array?",
        "Answer": "A multi-dimensional array is an array that contains one or more arrays as its elements. Each element can also be an array, forming a nested structure of arrays."
    },
    {
        "Tag": "Array",
        "Question": "What is an array index?",
        "Answer": "An array index is a numeric value used to identify and access individual elements within an array. The index typically starts from zero and increments sequentially."
    },
    {
        "Tag": "Array",
        "Question": "What is an array element?",
        "Answer": "An array element is a single value stored within an array. Each element is identified by its index and can be accessed, modified, or processed individually."
    },
    {
        "Tag": "Array",
        "Question": "What is an array length?",
        "Answer": "An array length is the total number of elements contained within an array. It indicates the size or capacity of the array and is typically fixed or dynamically adjusted as elements are added or removed."
    },
    {
        "Tag": "Array",
        "Question": "What is an array size?",
        "Answer": "An array size refers to the physical or allocated memory space reserved for storing elements within an array. It determines the maximum number of elements that an array can hold and may or may not be equal to the array length."
    },
    {
        "Tag": "Array",
        "Question": "What is an array capacity?",
        "Answer": "An array capacity is the maximum number of elements that an array can hold based on its allocated memory size or storage space. It may or may not be equal to the array length."
    },
    {
        "Tag": "Array",
        "Question": "What is an array bounds?",
        "Answer": "Array bounds refer to the range of valid index values that can be used to access elements within an array. The lower bound is typically zero or one, and the upper bound is determined by the array length minus one."
    },
    {
        "Tag": "Array",
        "Question": "What is an array traversal?",
        "Answer": "An array traversal is the process of visiting each element in an array in a systematic order, such as sequentially from the beginning to the end or vice versa."
    },
    {
        "Tag": "Array",
        "Question": "What is an array search?",
        "Answer": "An array search is the process of finding a specific element within an array by comparing its value with the values of other elements."
    },
    {
        "Tag": "Array",
        "Question": "What is an array sort?",
        "Answer": "An array sort is the process of arranging the elements within an array in a specific order, such as ascending or descending, based on their values."
    },
    {
        "Tag": "Array",
        "Question": "What is an array copy?",
        "Answer": "An array copy is the process of duplicating the elements of one array into another array, either entirely or partially."
    },
    {
        "Tag": "Array",
        "Question": "What is an array merge?",
        "Answer": "An array merge is the process of combining the elements of two or more arrays into a single array, either by concatenating them or by interleaving their elements."
    },
    {
        "Tag": "Array",
        "Question": "What is an array split?",
        "Answer": "An array split is the process of dividing the elements of an array into two or more separate arrays based on a specified condition or delimiter."
    },
    {
        "Tag": "Array",
        "Question": "What is an array join?",
        "Answer": "An array join is the process of concatenating the elements of an array into a single string, with optional delimiters between the elements."
    },
    {
        "Tag": "Array",
        "Question": "What is an array fill?",
        "Answer": "An array fill is the process of assigning a specified value to all elements within an array, effectively initializing or resetting its contents."
    },
    {
        "Tag": "Array",
        "Question": "What is an array map?",
        "Answer": "An array map is a higher-order function or method that applies a specified function or operation to each element within an array, producing a new array of transformed values."
    },
    {
        "Tag": "Array",
        "Question": "What is an array filter?",
        "Answer": "An array filter is a higher-order function or method that selects and returns a subset of elements from an array based on a specified condition or predicate."
    },
    {
        "Tag": "Array",
        "Question": "What is an array reduce?",
        "Answer": "An array reduce is a higher-order function or method that applies a specified binary operation or accumulator function to pairs of elements within an array, ultimately reducing them to a single value."
    },
    {
        "Tag": "Array",
        "Question": "What is an array slice?",
        "Answer": "An array slice is a contiguous subsequence of elements extracted from an array, specified by a starting index and an optional ending index."
    },
    {
        "Tag": "Array",
        "Question": "What is an array splice?",
        "Answer": "An array splice is the process of inserting, deleting, or replacing elements within an array at a specified position or range, effectively modifying its contents."
    },
    {
        "Tag": "Array",
        "Question": "What is an array reverse?",
        "Answer": "An array reverse is the process of reversing the order of elements within an array, such that the first element becomes the last and vice versa."
    },
    {
        "Tag": "Array",
        "Question": "What is an array rotation?",
        "Answer": "An array rotation is the process of cyclically shifting the elements within an array by a specified number of positions, either to the left or to the right."
    },
    {
        "Tag": "Array",
        "Question": "What is an array transpose?",
        "Answer": "An array transpose is the process of interchanging the rows and columns of a two-dimensional array, effectively flipping it along its main diagonal."
    },
    {
        "Tag": "Array",
        "Question": "What is an array copy constructor?",
        "Answer": "An array copy constructor is a special method or function that creates a new array by copying the elements of an existing array into it."
    },
    {
        "Tag": "Array",
        "Question": "What is an array deep copy?",
        "Answer": "An array deep copy is a copy operation that duplicates not only the elements of an array but also any nested arrays or objects contained within it, ensuring complete independence between the original and copied arrays."
    },
    {
        "Tag": "Array",
        "Question": "What is an array shallow copy?",
        "Answer": "An array shallow copy is a copy operation that duplicates only the top-level structure of an array, including its elements, but not any nested arrays or objects contained within it, resulting in shared references between the original and copied arrays."
    },
    {
        "Tag": "Array",
        "Question": "What is an array comparison?",
        "Answer": "An array comparison is the process of determining whether two arrays are equal or equivalent in terms of their contents, lengths, and ordering of elements."
    },
    {
        "Tag": "Array",
        "Question": "What is an array intersection?",
        "Answer": "An array intersection is the process of finding the common elements shared between two or more arrays, resulting in a new array containing only those elements that appear in all input arrays."
    },
    {
        "Tag": "Array",
        "Question": "What is an array union?",
        "Answer": "An array union is the process of combining the unique elements from two or more arrays into a single array, excluding any duplicate elements."
    },
    {
        "Tag": "Array",
        "Question": "What is an array difference?",
        "Answer": "An array difference is the process of subtracting the elements of one array from another array, resulting in a new array containing only those elements that appear in the first array but not in the second array."
    },
    {
        "Tag": "Array",
        "Question": "What is an array symmetric difference?",
        "Answer": "An array symmetric difference is the process of finding the elements that are unique to each of the input arrays, excluding any elements that are shared between them."
    },
    {
        "Tag": "Array",
        "Question": "What is an array set?",
        "Answer": "An array set is a data structure that represents a collection of unique elements, typically implemented using an array-based or hash-based approach."
    },
    {
        "Tag": "Array",
        "Question": "What is an array set intersection?",
        "Answer": "An array set intersection is the process of finding the common elements shared between two or more sets, resulting in a new set containing only those elements that appear in all input sets."
    },
    {
        "Tag": "Array",
        "Question": "What is an array set union?",
        "Answer": "An array set union is the process of combining the unique elements from two or more sets into a single set, excluding any duplicate elements."
    },
    {
        "Tag": "Array",
        "Question": "What is an array set difference?",
        "Answer": "An array set difference is the process of subtracting the elements of one set from another set, resulting in a new set containing only those elements that appear in the first set but not in the second set."
    },
    {
        "Tag": "Array",
        "Question": "What is an array set symmetric difference?",
        "Answer": "An array set symmetric difference is the process of finding the elements that are unique to each of the input sets, excluding any elements that are shared between them."
    },
    {
        "Tag": "Array",
        "Question": "what is a array",
        "Answer": "Array is used to store data in a contiguous memory location"
    }
]